import { ShoppingItem } from "@prisma/client";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import ItemModal from "~/components/itemModal";
import { HiX } from "react-icons/hi" 
import { motion } from "framer-motion"

import { api } from "~/utils/api";

const Home: NextPage = () => {

  // const hello = api.item.hello.useQuery({ text: "from tRPC!" });

  const [items, setItems] = useState<ShoppingItem[]>([])
  const [checkedItems, setCheckedItems] = useState<ShoppingItem[]>([])
  const [modalOpen, setModalOpen] = useState<boolean>(false)

  const {data: itemsData, isLoading} = api.item.getItems.useQuery(undefined, {
    onSuccess(shoppingItems) {
      setItems(shoppingItems)
      const checked = shoppingItems.filter((item) => item.checked)
      setCheckedItems(checked);
    }
  })

  const deleteItem = api.item.deleteItem.useMutation({
      onSuccess(shoppingItem){
        setItems((prevItems) => prevItems.filter((item) => item.id != shoppingItem.id))
      }
  }).mutate;

  const toogleCheckItem = api.item.toogleCheckItem.useMutation({
    onSuccess(shoppingItem){
      if(checkedItems.some((item) => item.id === shoppingItem.id)){
        setCheckedItems((prev) => prev.filter((item) => item.id !== shoppingItem.id))
      } else {
        setCheckedItems((prev) => [...prev, shoppingItem])
      }
    }
  }).mutate;

  if( !itemsData || isLoading) return <p>Loading...</p>

  return (
    <>
      <Head>
        <title>Shopping list</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      { modalOpen && <ItemModal setModalOpen={setModalOpen} setItems={setItems}/> }
      <main className="mx-24 my-12 max-w-3x1">
        <div className="flex justify-between">
          <h2 className="text-4xl font-semibold">My shopping list</h2>
          <button 
              type="button" 
              onClick={ () => setModalOpen(true)}
              className="bg-violet-500 text-white text-sm p-2 rounded-md transition hover:bg-violet-600"
            >
              Add shoping item
          </button>
        </div>
        <div >
          <ul className="mt-4">
            {items.map((item) => {
              const {id, name} = item
              return (
              <li key={id} className="flex w-fill justify-between items-center">
                <div className="relative">
                  <div className="pointer-events-none absolute inset-0 flex origin-left items-center justify-center">
                    <motion.div 
                      initial={{ width: 0}}
                      animate={{ width: checkedItems.some((item) => item.id === id) ? '100%' : 0 }}
                      transition={{ duration: 0.2, ease: "easeInOut" }}
                      className="h-[2px] w-full translate-y-px bg-red-500"
                    />
                  </div>
                  <span onClick={() => toogleCheckItem({id: id, checked: checkedItems.some((item) => item.id === id) ? false : true })}>{name}</span>
                </div>
                <HiX onClick={() => deleteItem({id: id})} className="text-xl text-red-500 cursor-pointer"/>
              </li>
              )}
            )}   
          </ul>
        </div>
      </main>
    </>
  );
};

export default Home;
